name: "Example CI"

on:
  push:
    branches:
      - main
    paths:
      - "terraform/environments/example/**"
      - ".github/workflows/example_ci.yaml"
  pull_request:
    branches:
      - main
    paths:
      - "terraform/environments/example/**"
      - ".github/workflows/example_ci.yaml"

jobs:
  terraform-static-analysis:
    permissions:
      contents: read
      pull-requests: write
    name: "🛡️Terraform Static Analysis"
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Run Static Analysis
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}
        uses: ./.github/actions/terraform-static-analysis

  terraform-test-and-plan:
    permissions:
      contents: read
      pull-requests: write
      id-token: write
    name: "📝Terraform Test and Plan"
    needs: terraform-static-analysis
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: ">=1.17.0"

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: us-east-2
          role-to-assume: "arn:aws:iam::${{secrets.ACCOUNT_NUMBER}}:role/github-actions"
          role-session-name: githubactionsrolesession

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Run Terraform Plan
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}
        run: |
          git_dir=`git rev-parse --show-toplevel`

          if [ ! -z ${{ github.event.pull_request.number }} ]
          then
            bash scripts/terraform-init.sh "terraform/environments/example"

            # Select workspace
            terraform -chdir="terraform/environments/example" workspace select dev

            # Run Terratest
            pushd terraform/environments/example/tests

            TEST=`go test | tee /dev/stderr | tail -n 1`

            popd

            TEST="> TERRATEST RESULT - example
            ${TEST}"
            bash scripts/comment-pr.sh "${TEST}"

            # Terraform Plan
            PLAN=`bash scripts/terraform-plan.sh terraform/environments/example | tee /dev/stderr | grep '^Plan: \|^No changes.'`

            bash scripts/comment-pr.sh "${PLAN}"
          fi
